{
	rel:{
		nosyntax:"*",
		xvb:"xvb,cls,bas,frm,vbs,dsr",
		SQL:"sql",
		XHTML:"htm,xml,html",
		json:"json"
	},
	vba:{
		FF:{
			rd:1,
			rem:"error",
			pat:""
		},
		FF8080:{
			rd:1,
			rem:"4ryhrherherherjet",
			pat:""
		},
		808040:{
			rd:1,
			rem:"comments 2",
			pat:""
		},
		FF00:{
			rd:1,
			rem:"comments 3",
			pat:""
		},
		408000:{
			rd:1,
			rem:"comments 15555",
			pat:"55555"
		}
	},
	nosyntax:{
		000  FFFFFF000000:{
			rd:1,
			rem:"Default Shema",
			pat:"[^\\x00]*"
		}
	},
	xvb:{
		000  FFFFFF000000:{
			rd:1,
			rem:"Default Shema",
			pat:"[^\\0]*"
		},
		FFFFE1000000:{
			rd:1,
			rem:"xHTML\r\n",
			pat:"~.*?~|^~.*$"
		},
		706000:{
			rd:1,
			rem:"comments /**/ NESTED=3",
			pat:"\x01\x01\x01/\\*(?:(?:.|\\n)(?!/\\*))*?\\*/"
		},
		BBFFAADD0000:{
			rd:1,
			rem:"'#include",
			pat:"\x01^'#include .*$"
		},
		AAFFEEAA0000:{
			rd:1,
			rem:"'define#",
			pat:"\x01^'#(?:string|compute|define) .*$"
		},
		CCFFFF002070:{
			rd:1,
			rem:"'define multiline #",
			pat:"\x01^'#(?:string<|define<) (?:.|\\n)*?'#(?:string>|define>).*$"
		},
		EEFFFF002070:{
			rd:1,
			rem:"<$\"\"$> Multiline strings",
			pat:"<\\$\"(?:.|\\n)*?\"\\$>"
		},
		008020:{
			rd:1,
			rem:"'full line comments",
			pat:"\x01^\\s?'.*$"
		},
		002070:{
			rd:1,
			rem:"strings \"str\"",
			pat:"\x01\"[^\"\\n]*\""
		},
		A00001:{
			rd:1,
			rem:"vbs statemens",
			pat:"\\b(?:And|Or|Not|True|False|Nothing|Empty|Null|As|ByRef|ByVal|Call|Case|Class|Default|Const|Continue|Dim|Do|Each|Else|ElseIf|End|Erase|Error|Exit|For|Function|Get|GoTo|If|Is|In|IsNumeric|Let|Loop|Me|New|Next|On|Object|Preserve|Property|Private|Public|ReDim|Resume|Select|Set|Step|Stop|Sub|Then|To|Until|Wend|While|With)\\b"
		},
		C00020:{
			rd:1,
			rem:"vbs functions",
			pat:"\\b(?:IFF|isArray|MsBox|CParam|IF0|RunSQL|GetRows|ArrayDims|FindIndex|CMatrix|AddIndex|Abs|CreateObject|Join|Split|aVal|Nz|NzS|Join2|Chr|Left|Right|Mid|Round|Replace|Array|IsNull|Asc|Clng|Cint|Len)\\b"
		},
		0000BB:{
			rd:1,
			rem:"numbers",
			pat:"\\b[0-9]*\\b"
		},
		99FFFFFF0000:{
			rd:1,
			rem:"#tags#",
			pat:"#(?:##|[^#\\s])+#"
		},
		008000:{
			rd:1,
			rem:"'in line comments",
			pat:"'.*$"
		}
	},
	SQL:{
		FFFFFF000000:{
			rd:1,
			rem:"Default Shema",
			pat:"[^\\0]*"
		},
		002070:{
			rd:1,
			rem:"single line strings 'str' \"str\"",
			pat:"\x01\"[^\"\\n]*\"|'[^'\\n]*'"
		},
		008000:{
			rd:1,
			rem:"sql comments -- /**/",
			pat:"\x01\x01\x01--[^\\r\\n]*|/\\*(?:(?:.|\\n)(?!/\\*))*?\\*/"
		},
		0000BB:{
			rd:1,
			rem:"numbers",
			pat:"\\b[0-9]*\\b"
		},
		F00000:{
			rd:1,
			rem:"sql keywords",
			pat:"\\b(?:AND|OR|RETURNS|Between|RETURN|HAVING|FUNCTION|VIEW|PARAMETERS|DATEDIFF|AS|NOT|SELECT|CLOSE|DEALLOCATE|MIN|MAX|SUM|DELETE|FOR|SET|OPEN|INSERT|FROM|True|False|ON|IN|IIF|ISNULL|NULLIF|ROUND|SUBSTRING|WHERE|LEFT|Null|OUTER|INNER|JOIN|RIGHT|GROUP BY|ORDER BY|DESC|ASC|CAST|CONVERT|COUNT|ELSE|CASE WHEN|THEN|BEGIN|WHILE|FETCH|NEXT|INTO|IF|DECLARE|CREATE|PROCEDURE|ALTER|UPDATE|CURSOR|END|varchar|int|char|datetime|byte)\\b"
		},
		00FFFF000080:{
			rd:1,
			rem:"\x7Bcomputed tags\x7D",
			pat:"\x7B[\\w\\W]*?(?=\x7D)\x7D"
		},
		A6CCFF900000:{
			rd:1,
			rem:"provider tag <PROV::PROV>",
			pat:"<([A-Z]+):[\\w\\W]*?(?=:\\1>):\\1>"
		}
	},
	XHTML:{
		000  FFFFFF000000:{
			rd:1,
			rem:"Default Shema",
			pat:"[^\\x00]*"
		}
	},
	json:{
		Consolas000 9FFFFFFA00000:{
			rd:1,
			rem:"Default Shema",
			pat:"[^\\0]*"
		},
		88:{
			rd:1,
			rem:"numbers",
			pat:"\\b[0-9]*\\b"
		},
		6E6E6E:{
			rd:1,
			rem:"strings \"str\"",
			pat:"\x01\"[^\"\\n]*\""
		}
	}
}